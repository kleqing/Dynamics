@model Dynamics.Models.Models.Request

@{
    ViewData["Title"] = "Edit Request";
}
<head>
    <link rel="stylesheet" href="wwwroot/css/output.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <meta charset="UTF-8">
</head>
<body>
<main class="w-full h-full flex flex-col gap-6 items-center p-32">
    <h1 class="text-3xl">
        Edit your request
    </h1>
    <div class="my-5 px-0 pt-12 w-full flex justify-center">
        <form asp-action="Edit" asp-controller="Request" enctype="multipart/form-data" id="dmForm" 
              method="post" class="p-6 shadow-md flex flex-col gap-4 w-full max-w-[850px]">
            <div asp-validation-summary="ModelOnly" class="text-error"></div>
            <div>
                <input asp-for="@Model.RequestID" value="@Model.RequestID" class="hidden">
                <input type="date" asp-for="@Model.CreationDate" class="hidden" name="StartTime"/>
                <input asp-for="@Model.UserID" value="@Model.UserID" class="hidden">
                <input class="hidden" name="cityNameInput">
                <input class="hidden" name="districtNameInput"/>
                <input class="hidden" name="wardNameInput">
            </div>
            <label class="form-control w-full">
                <span class="label label-text font-bold text-lg" for="RequestTitle">
                    Request Title
                </span>
                <input asp-for="@Model.RequestTitle"
                       class="input input-bordered w-full"
                       id="RequestTitle" type="text" placeholder="Enter your request title"/>
                <span asp-validation-for="RequestTitle" class="text-error"></span>
            </label>
            <label class="form-control">
                <span class="label label-text font-bold text-lg" for="Content">
                    Request Description
                </span>
                <textarea asp-for="@Model.Content"
                           class="textarea textarea-bordered textarea-lg w-full"
                           id="Content" placeholder="Enter your request description" rows="7" style="resize: none"></textarea>
                <span asp-validation-for="Content" class="text-error"></span>
            </label>
            
            <label  class="form-control">
                <label for="file-upload" class="file-upload-label label-text font-bold text-lg">
                    <span>Choose images</span>
                </label>
                <input id="file-upload" type="file" name="images" multiple class="file-input file-input-bordered w-full max-w-xs">
                <span class="label label-text text-">Images will help you appeal to more people</span>
            </label>
            <span asp-validation-for="Attachment" class="text-error"></span>
            <div class="flex gap-12 items-center">
                <div class="left flex-1">
                    <!-- Email -->
                    <label class="form-control w-full">
                        <span class="label label-text font-bold text-lg">Request email</span>
                        <input
                            type="text"
                            placeholder="Enter request email"
                            class="input input-bordered w-full"
                            asp-for="@Model.RequestEmail"
                            id="RequestEmail"
                        >
                        <span asp-validation-for="RequestEmail" class="text-error"></span>
                    </label>
                    <!-- Phonenumber -->
                    <label class="form-control w-full">
                        <span class="label label-text font-bold text-lg">Request phone number</span>
                        <input
                            type="text"
                            placeholder="Enter request phone number"
                            class="input input-bordered w-full"
                            asp-for="RequestPhoneNumber"
                            id="RequestPhoneNumber"
                        />
                        <span asp-validation-for="RequestPhoneNumber" class="text-error"></span>
                    </label>
                    <!-- Address -->
                    <label class="form-control w-full">
                        <span class="label label-text font-bold text-lg">Request address</span>
                        <div>
                            <select class="select select-bordered w-full mb-4" id="city" aria-label=".form-select-sm">
                                <option id="pOption" value="" selected>Choose province</option>
                            </select>

                            <select class="select select-bordered w-full mb-4" id="district" aria-label=".form-select-sm">
                                <option id="dOption" value="" selected>Choose district</option>
                            </select>

                            <select class="select select-bordered w-full mb-4" id="ward" aria-label=".form-select-sm">
                                <option id="wOption" value="" selected>Choose ward/commune</option>
                            </select>
                        </div>
                        @{
                        var address = Model.Location ?? "";
                        var streetOnly = address.Split(',')[0];
                        }
                        <input
                            type="text"
                            placeholder="Enter street and house number"
                            class="input input-bordered w-full"
                            asp-for="@Model.Location"
                            value="@streetOnly"
                            id="RequestLocation"
                        />
                        <span asp-validation-for="Location" class="text-error"></span>
                    </label>
                    <span class="label label-text font-bold text-lg" for="isEmergency">
                        Is this an emergency request?
                    </span>
                    <select id="isEmergency" name="isEmergency"
                            class="select select-bordered w-full"
                            asp-for="isEmergency">
                        <option value="0">No</option>
                        <option value="1">Yes</option>
                    </select>
                </div>
                <span>Or</span>
                <div class="right">
                    <button type="button" onclick="getUserContact()" id="contactBtn" class="btn btn-info">Use my information as contact</button>
                </div>
            </div>
            <div class="w-full flex justify-center mt-4">
                <button class="btn btn-primary" type="submit" id="submitBtn">
                    Edit Request
                </button>
            </div>
        </form>
    </div>
</main>
</body>

<partial name="_ValidationScriptsPartial"/>
@*Script for inputting request location*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script>
    let citis = document.getElementById("city");
    let districts = document.getElementById("district");
    let wards = document.getElementById("ward");
    let Parameter = {
        url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
        method: "GET",
        responseType: "application/json",
    };
    let promise = axios(Parameter);
    promise.then(function (result) {
  renderCity(result.data);
});

function renderCity(data) {
  for (const x of data) {
    citis.options[citis.options.length] = new Option(x.Name, x.Id);
  }
  citis.onchange = function () {
    district.length = 1;
    ward.length = 1;
    if(this.value != ""){
      const result = data.filter(n => n.Id === this.value);

      for (const k of result[0].Districts) {
        district.options[district.options.length] = new Option(k.Name, k.Id);
      }
    }
  };
  district.onchange = function () {
    ward.length = 1;
    const dataCity = data.filter((n) => n.Id === citis.value);
    if (this.value != "") {
      const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

      for (const w of dataWards) {
        wards.options[wards.options.length] = new Option(w.Name, w.Id);
      }
    }
  };
}

let clicked = 0;

function getUserContact(){
    clicked++;
    var address = '@Html.Raw(Model.User.UserAddress)';
    var streetOnly = address.split(',')[0] || ""; // Split the address and handle case where it might be empty

    if (clicked % 2 === 1) {
        // Set the input fields with user's contact information
        document.getElementById('RequestEmail').value = '@Model.User.UserEmail';
        document.getElementById('RequestPhoneNumber').value = '@Model.User.UserPhoneNumber';
        document.getElementById('RequestLocation').value = streetOnly;

        // Change the button element
        let contactBtn = document.getElementById('contactBtn');

        contactBtn.classList.remove('btn-info');
        contactBtn.classList.add('btn-success');

        // Append the check icon to the button
        contactBtn.innerHTML = 'Use my information as contact <i class="bi bi-check2-circle"></i>';

        // Change option for visibility
        let address = '@Html.Raw(Model.User.UserAddress)';
        let parts = address.split(',');
        document.getElementById('pOption').innerHTML = parts[3].trim();
        document.getElementById('dOption').innerHTML = parts[2].trim();
        document.getElementById('wOption').innerHTML = parts[1].trim();
    } else {
        // Set the input fields to null
        document.getElementById('RequestEmail').value = '';
        document.getElementById('RequestPhoneNumber').value = '';
        document.getElementById('RequestLocation').value = '';

        // Change the button element
        let contactBtn = document.getElementById('contactBtn');
        contactBtn.classList.remove('btn-success');
        contactBtn.classList.add('btn-info');

        // Un-append the check icon to the button
        contactBtn.innerHTML = 'Use my information as contact';

        // Remove option
        document.getElementById('pOption').innerHTML = 'Choose province';
        document.getElementById('dOption').innerHTML = 'Choose district';
        document.getElementById('wOption').innerHTML = 'Choose ward/commune';
    }
}

let myForm = document.querySelector('#dmForm')
console.log(myForm)
    myForm.addEventListener('submit', (e) => {
    // Get the selected text for city, district, and ward
    const cityName = citis.options[citis.selectedIndex].text;
    const districtName = districts.options[districts.selectedIndex].text;
    const wardName = wards.options[wards.selectedIndex].text;

    // Set hidden inputs or modify existing ones with the text values
    document.getElementsByName('cityNameInput')[0].value = cityName;
    document.getElementsByName('districtNameInput')[0].value = districtName;
    document.getElementsByName('wardNameInput')[0].value = wardName;
    // Validate here
        let loadingModal = document.getElementById("loadingModal");
        if (isLegit()) {
            loadingModal.style.display = "flex";
        } else {
            loadingModal.style.display = "none";
            e.preventDefault();
        }
})

</script>