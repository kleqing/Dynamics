@model Dynamics.Models.Models.ViewModel.HTMLPaginationVM
@* TODO: Handle multiple search form ? *@
@{
    var startRecords = ((Model.PaginationRequestDto.PageNumber - 1) * Model.PaginationRequestDto.PageSize) + 1; // page 2 , size 9 => Showing from 10 -> 18
    if (Model.PaginationRequestDto.TotalRecords == 0) startRecords = 0;
    var endRecords = Model.PaginationRequestDto.PageNumber * Model.PaginationRequestDto.PageSize;
    if (endRecords > Model.PaginationRequestDto.TotalRecords) endRecords = Model.PaginationRequestDto.TotalRecords;
}

<div class="flex justify-between items-center px-4 py-3" id="@Model.PaginationDivId">
    <div class="text-sm text-slate-500">
        Showing <b>@startRecords-@endRecords</b> of @Model.PaginationRequestDto.TotalRecords
    </div>
    <div class="flex space-x-1">
        @if (Model.PaginationRequestDto.PageNumber > 1)
        {
            <button id="prePageBtn" class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease">
                Previous
            </button>
        }
        @if (Model.PaginationRequestDto.TotalPages >= 10)
        {
            // 2 left pages
            for (int i = 1; i <= 2; i++)
            {
                <button id="pageBtn_@i" class="@(Model.PaginationRequestDto.PageNumber == i ? "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-white bg-slate-800 border border-slate-800 rounded hover:bg-slate-600 hover:border-slate-600 transition duration-200 ease" : "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease")">
                    @i
                </button>
            }
            <button class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease">
                ...
            </button>
            // 3 middle pages
            var nextThreePages = Model.PaginationRequestDto.PageNumber + 3;
            for (int i = Model.PaginationRequestDto.PageNumber; i < nextThreePages; i++)
            {
                <button id="pageBtn_@i" class="@(Model.PaginationRequestDto.PageNumber == i ? "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-white bg-slate-800 border border-slate-800 rounded hover:bg-slate-600 hover:border-slate-600 transition duration-200 ease" : "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease")">
                    @i
                </button>
            }
            <button class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease">
                ...
            </button>
            // 2 Right page
            for (int i = Model.PaginationRequestDto.TotalPages; i >= Model.PaginationRequestDto.TotalPages - 2; i--)
            {
                <button id="pageBtn_@i" class="@(Model.PaginationRequestDto.PageNumber == i ? "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-white bg-slate-800 border border-slate-800 rounded hover:bg-slate-600 hover:border-slate-600 transition duration-200 ease" : "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease")">
                    @i
                </button>
            }
        }
        else
        {
            for (int i = 1; i <= Model.PaginationRequestDto.TotalPages; i++)
            {
                <button id="pageBtn_@i" class="@(Model.PaginationRequestDto.PageNumber == i ? "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-white bg-slate-800 border border-slate-800 rounded hover:bg-slate-600 hover:border-slate-600 transition duration-200 ease" : "px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease")">
                    @i
                </button>
            }
        }


        @if (Model.PaginationRequestDto.PageNumber < Model.PaginationRequestDto.TotalPages)
        {
            <button id="nextPageBtn" class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal text-slate-500 bg-white border border-slate-200 rounded hover:bg-slate-50 hover:border-slate-400 transition duration-200 ease">
                Next
            </button>
        }
    </div>
</div>

@* Scripts used to set the hidden pagination related input in the search bar *@
<script>
    let paginationDiv = @Model.PaginationDivId;
    let previousPage = @Model.PaginationRequestDto.PageNumber - 1
    let nextPage = @Model.PaginationRequestDto.PageNumber + 1
    let totalPage = @Model.PaginationRequestDto.TotalPages;
    let targetSearchForm = document.getElementById('@Html.Raw(Model.FormId)')
    let pageNumberElement = targetSearchForm.querySelector('input[name="PageNumber"]');
    console.log(targetSearchForm)
    // Handle click on numbers
    // Handle click on page number buttons
    for (let i = 1; i <= totalPage; i++) {
        paginationDiv.querySelector(`#pageBtn_${i}`)?.addEventListener('click', function(e) {
            e.preventDefault(); // Prevent default behavior
            pageNumberElement.value = i; // Set the page number to the clicked button number
            targetSearchForm.submit(); // Submit the form
        });
    }
    
    // Handle previous button click
    paginationDiv.querySelector('#prePageBtn')?.addEventListener('click', function(e) {
        e.preventDefault(); // Prevent default behavior
        if (previousPage > 0) { // Ensure valid page number
            pageNumberElement.value = previousPage; // Set the previous page number
            targetSearchForm.submit(); // Submit the form
        }
    });

    // Handle next button click
    paginationDiv.querySelector('#nextPageBtn')?.addEventListener('click', function(e) {
        e.preventDefault(); // Prevent default behavior
        if (nextPage <= totalPage) { // Ensure valid page number
            pageNumberElement.value = nextPage; // Set the next page number
            targetSearchForm.submit(); // Submit the form
        }
    });

</script>